@use "../../styles/variables.scss" as *;

.container {
  @include media-bp-up(desktop) {
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  .bun {
    flex: 0 0 auto;
    margin-bottom: 10px;
  }

  .list {
    flex: 1 1 auto;
    margin-bottom: 10px;
  }

  .order {
    flex: 0 0 auto;
  }
}

.list {
  padding-right: $spacer * 2;
  padding-left: $spacer * 4;
  min-height: 80px;

  @include media-bp-up(desktop) {
    display: flex;
    flex-direction: column;
    gap: 10px;
    overflow-y: auto;
    overflow-x: hidden;
  }

  @include media-bp-down(tablet) {
    padding-left: $spacer * 2;
  }
}

.drop {
  position: relative;

  &_text {
    @include media-bp-down(tablet) {
      font-size: 20px;
    }
  }

  &::after {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    bottom: 0;
    border: 5px dashed transparent;
    background: transparent;
    transition: 0.25s all;

    @include media-bp-down(tablet) {
      border-width: 4px;
    }
  }

  &.canDrop {
    &::after {
      border-color: rgba($success, 0.3) !important;
      background-color: rgba($success, 0.05) !important;
      z-index: 2;
    }
  }

  &.onHover {
    &::after {
      border-color: rgba($success, 0.8) !important;
      background-color: rgba($success, 0.1) !important;
      z-index: 2;
    }
  }
}

.empty {
  display: flex;
  align-items: center;
  justify-content: center;
  color: $input;

  &::after {
    border-color: $input;
  }
}

.bun {
  $bun: &;

  padding-right: $spacer * 2;
  padding-left: $spacer * 4;

  &:not(#{$bun}.empty) + .list {
    @include media-bp-up(desktop) {
      overflow-y: scroll;
    }
  }

  @include media-bp-down(tablet) {
    padding-left: $spacer * 2;
  }

  &.drop {
    &#{$bun}.top::after {
      border-radius: var(--top-constructor-item-border-radius);
    }

    &#{$bun}.bottom::after {
      border-radius: var(--bottom-constructor-item-border-radius);
    }
  }

  &.empty {
    height: 80px;
  }

  &:global(.custom-scroll) {
    @include media-bp-up(desktop) {
      overflow-y: scroll;
      scrollbar-color: transparent transparent;

      &::-webkit-scrollbar,
      &::-webkit-scrollbar-thumb,
      &::-webkit-scrollbar-track {
        background-color: transparent;
        border-color: transparent;
      }
    }
  }
}

.order {
  display: flex;
  justify-content: flex-end;
  flex-wrap: wrap;
  align-items: center;
  gap: $spacer * 10;
  padding: $spacer * 10 0;

  @include media-bp-down(tablet) {
    z-index: 2000;
    position: fixed;
    right: 0;
    bottom: 0;
    left: 0;
    gap: $spacer * 5;
    padding: $spacer * 4 $spacer * 2;
    background: $modalBg;

    &_spacer {
      height: 150px;
    }
  }

  &__sum {
    display: flex;
    align-items: center;

    svg {
      width: 36px;
      height: 36px;
    }

    @include media-bp-down(tablet) {
      font-size: 26px;

      svg {
        width: 26px;
        height: 26px;
      }
    }
  }
}

.error {
  flex: 1 1 100%;
  text-align: center;
  color: $error;
}
